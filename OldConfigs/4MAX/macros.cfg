[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = printer.heater_bed.target %}
    {% set EXTRUDER_TEMP = printer.extruder.target %}
    M117 Start Print

    #M104 S0
    #M140 S0

    #{% if 'z' in printer.toolhead.homed_axes %}
    #    G0 X{ printer.toolhead.axis_minimum.x + 2 } Y{ printer.toolhead.axis_minimum.y + 2 }
    #{% else %}
    #    #G90
    #    G28
    #{% endif %}

    M117 Waiting for temperature
    # M117 Target { printer.extruder.temperature }/{ printer.extruder.target }
    # Start bed heating and continue
    M140 S{BED_TEMP}
    {% if printer.heater_bed.temperature < BED_TEMP|float*0.85 %}
        M190 S{BED_TEMP|float*0.85} # wait till 0.85 of bed temp is reached, then continue  
    {% endif %}
    
    M140 S{BED_TEMP} 
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}

    M117 Homing
    # Use absolute coordinates
    G90
    # Home the printer
    # G28
    PROBE_MESH

    # Move the nozzle near the bed
    G1 X15 Y20 Z5 F6000
    
    # Prime line
    PRIME_LINE
    M117 Printing...

[gcode_macro END_PRINT]
gcode:
    M117 Done printing :)
    # move z up
    G91
    G1 E-3 Z+10 F3000
    # absolute xy 
    G90
    G1 X{printer.toolhead.axis_maximum.x -5} Y{printer.toolhead.axis_maximum.y - 5} F2000
    #disable hotend and heated bed
    M104 S0
    M140 S0
    # disable steppers
    M84

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G0 X-2 Y5 F9000 ; Go to front
    G0 Z0.05 ; Drop to bed
    G92 E0 ; zero the extruded length
    G1 E30 F200 ; Extrude 25mm of filament in a 4cm line
    G92 E0 ; zero the extruded length
    G1 E-1 F500 ; Retract a little
    G1 X20 F4000 ; Quickly wipe away from the filament line
    G1 Z2.0 ; Raise and begin printing.

[gcode_macro PROBE_MESH]
gcode:
    # Home all axis
    G28
    # Start probing
    #BED_MESH_CALIBRATE PROFILE=automesh METHOD=automatic
    #BED_MESH_PROFILE SAVE=automesh
    #BED_MESH_PROFILE LOAD=automesh

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set purge_speed = 100 %}
    {% set purge_length = 50 %}
    {% set load_length = 600 %}
    {% set max_extrude_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% set min_extrude_temp = printer.configfile.settings['extruder'].min_extrude_temp %}
    
    {% set current_temp = printer.extruder.temperature %}
    {% set target_temp = printer.extruder.target %}

    {% if current_temp >= target_temp and current_temp < min_extrude_temp %}
        M118 Start Heating first
    {% else %}
        SAVE_GCODE_STATE NAME=load_state
        M118 Waiting for Extruder Temp
        M109 S{target_temp}
        M300 # beep
        M117 Loading...
        M118 Loading...
        G91
        G92 E0
        G1 E{load_length} F{max_extrude_velocity} # fast-load
        M300 # beep
        M117 Purging...
        M118 Purging...
        G1 E{purge_length} F{purge_speed} # Purge
        M300 # beep
        M300 # beep
        G92 E0
        M117  
        M118  
        RESTORE_GCODE_STATE NAME=load_state
    {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set purge_speed = 100 %}
    {% set purge_length = 10 %}
    {% set unload_length = -625 %}
    {% set max_extrude_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {% set min_extrude_temp = printer.configfile.settings['extruder'].min_extrude_temp %}

    {% set current_temp = printer.extruder.temperature %}
    {% set target_temp = printer.extruder.target %}

    {% if current_temp >= target_temp and current_temp < min_extrude_temp %}
        M118 Start Heating first
    {% else %}
        SAVE_GCODE_STATE NAME=unload_state
        M118 Waiting for Extruder Temp
        M109 S{target_temp}
        G91
        M300 # beep
        M117 Purging...
        M118 Purging...
        G92 E0
        G1 E{purge_length} F{purge_speed} # purge
        M300 # beep
        M117 Unloading...
        M118 Unloading...
        G1 E{unload_length} F{max_extrude_velocity} # fast-unload
        M300 # beep
        M300 # beep
        G92 E0
        M117  
        M118  
        RESTORE_GCODE_STATE NAME=unload_state
    {% endif %}


#[gcode_macro DEBUG_MACRO]
#gcode: 
#    M117 Debug